package test04;


import java.awt.Image;
import java.awt.image.BufferedImage;
import java.awt.image.CropImageFilter;
import java.awt.image.FilteredImageSource;
import java.awt.image.RenderedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;

import javax.imageio.ImageIO;

import com.google.zxing.BinaryBitmap;
import com.google.zxing.ChecksumException;
import com.google.zxing.FormatException;
import com.google.zxing.LuminanceSource;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.NotFoundException;
import com.google.zxing.Reader;
import com.google.zxing.Result;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.common.HybridBinarizer;

public class Cut {
	
	private static final RenderedImage SubImgagex = null;
	private static BufferedImage principal;
	private static int width,height;
	private static Image parte1, parte2;

	

	public static void main(String[] args) {

    try {
    	
    		BufferedImage originalImgage = ImageIO.read(new File("C:/Users/OCAD/Desktop/Scan0001.jpg"));
    		
    		int tWidth = originalImgage.getWidth();
    		int tHeight = originalImgage.getHeight();

    		System.out.println("Image Dimension: " + tWidth + "x" + tHeight);
    	
    		
    		  String pathname = "C:/Users/OCAD/Desktop/Scan0001.jpg";
    		  String text = readQR(pathname);
              System.out.print(text);
	
		
			parte1 =(BufferedImage) originalImgage.getSubimage(3620,1990,1500,2100);
			
			File outputfilex = new File("C:/test/"+text+".jpg");
			ImageIO.write(SubImgagex, "jpg", outputfilex);
			
		

    } catch (Exception e) {
        e.printStackTrace();
    }



}
	
	  private static String readQR(String pathname) throws FormatException, ChecksumException, NotFoundException, IOException {
	    	
	    	
	        InputStream qrInputStream = new FileInputStream(pathname);
	        BufferedImage qrBufferedImage = ImageIO.read(qrInputStream);
	        
	  

	        LuminanceSource source = new BufferedImageLuminanceSource(qrBufferedImage);
	        BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));
	        Reader reader = new MultiFormatReader();
	        Result stringBarCode = reader.decode(bitmap);
	        
	        return stringBarCode.getText();
	       
	    }
}
		
		